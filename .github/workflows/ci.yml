name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Install Node dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        pytest --cov=. --cov-report=xml --cov-report=html
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run --coverage
    
    - name: Run security scans
      run: |
        cd backend
        pip install bandit safety
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          backend/coverage.xml
          backend/bandit-report.json
          backend/safety-report.json
          frontend/coverage/lcov.info

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      run: |
        cd backend
        docker build -t todoweb-backend:test .

    - name: Build frontend image
      run: |
        cd frontend
        docker build -t todoweb-frontend:test .

    - name: Test Docker images
      run: |
        docker run --rm todoweb-backend:test python -c "import main; print('Backend image works')"
        docker run --rm todoweb-frontend:test ls -la /usr/share/nginx/html